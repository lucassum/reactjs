{"version":3,"sources":["components/Header.js","components/Square/index.js","components/Score/index.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Square","value","onClick","Score","Main","useState","Array","fill","squareState","setSquareState","xTurn","setXTurn","score","setScore","handleClick","i","temp","squares","lines","length","a","b","c","calculateWinner","alert","index","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAWeA,MATf,WACI,OACI,wBAAQC,UAAU,SAAlB,SACI,8BACI,oBAAIA,UAAU,QAAd,gC,0BCKDC,MARf,YAAsC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAEtB,OACI,wBAAQA,QAASA,EAAjB,SACID,KCQGE,G,MAbD,SAAC,GAAD,IAAGF,EAAH,EAAGA,MAAH,OACV,sBAAKF,UAAU,QAAf,UACI,oBAAIA,UAAU,QAAd,oBACA,sBAAKA,UAAU,SAAf,UACI,8BACKE,EAAM,KAEX,8BACKA,EAAM,aCuDRG,MA1Df,WAyCI,IAzCc,IAAD,EACyBC,mBAASC,MAAM,GAAGC,KAAK,OADhD,mBACNC,EADM,KACOC,EADP,OAGaJ,oBAAS,GAHtB,mBAGNK,EAHM,KAGCC,EAHD,OAIaN,mBAAS,CAAC,EAAG,IAJ1B,mBAINO,EAJM,KAICC,EAJD,KAyBPC,EAAc,SAACC,GACjB,IAAIP,EAAYO,GAAhB,CACA,IAAMC,EAAI,YAAOR,GAGjB,GAFAQ,EAAKD,GAAKL,EAAQ,IAAM,IACxBD,EAAeO,GAxBnB,SAA0BC,GAWtB,IAVA,IAAMC,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFH,EAAI,EAAGA,EAAIG,EAAMC,OAAQJ,IAAK,CAAC,IAAD,cACjBG,EAAMH,GADW,GAC5BK,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIL,EAAQG,IAAMH,EAAQG,KAAOH,EAAQI,IAAMJ,EAAQG,KAAOH,EAAQK,GAClE,OAAOL,EAAQG,GAGvB,OAAO,KAQHG,CAAgBP,GAAO,CACvBQ,MAAM,GAAD,OAAId,EAAQ,IAAM,IAAlB,sBACL,IAAMM,EAAI,YAAOJ,GACjBI,EAAKN,EAAQ,EAAI,IAAM,EACvBG,EAASG,GAhCKP,EAAeH,MAAM,GAAGC,KAAK,OAmC/CI,GAAUD,KAGRO,EAAU,GAxCH,WAyCJQ,GACLR,EAAQS,KACJ,cAAC,EAAD,CAAQzB,MAAOO,EAAYiB,GAAQvB,QAAS,kBAAMY,EAAYW,QAF7DA,EAAQ,EAAGA,EAAQ,EAAGA,IAAU,EAAhCA,GAOT,OACI,iCACI,qBAAK1B,UAAU,YAAf,SACKkB,IAEL,cAAC,EAAD,CAAOhB,MAAOW,Q,MC9CXe,MATf,WACE,OACE,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGS6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d236f3a6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../header.css\";\nfunction Header () {\n    return (\n        <header className=\"header\">\n            <div>\n                <h1 className=\"title\">Jogo da Velha</h1>\n            </div>\n        </header>\n    )\n}\nexport default Header","import React from \"react\";\nimport \"./index.css\";\n\nfunction Square ({ value, onClick }) {\n\n    return (\n        <button onClick={onClick}>{\n            value\n        }</button>\n    )\n}\nexport default Square","import React from \"react\";\nimport \"./score.css\";\nconst Score = ({ value }) =>\n    <div className=\"score\">\n        <h2 className=\"title\" >Placar</h2>\n        <div className=\"values\">\n            <div>\n                {value[0]}\n            </div>\n            <div>\n                {value[1]}\n            </div>\n        </div>\n    </div>\n\nexport default Score","import React, { useState } from \"react\";\nimport \"../main.css\";\nimport Square from \"./Square/index.js\";\nimport Score from \"./Score/index.js\";\n\n\n\nfunction Main () {\n    const [squareState, setSquareState] = useState(Array(9).fill(null))\n    const reset = () => { setSquareState(Array(9).fill(null)) }\n    const [xTurn, setXTurn] = useState(true)\n    const [score, setScore] = useState([0, 0])\n    function calculateWinner (squares) {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                return squares[a];\n            }\n        }\n        return null;\n    }\n\n    const handleClick = (i) => {\n        if (squareState[i]) return;\n        const temp = [...squareState]\n        temp[i] = xTurn ? 'X' : 'O'\n        setSquareState(temp)\n        if (calculateWinner(temp)) {\n            alert(`${xTurn ? 'X' : 'O'} Ã© o vencedor!`)\n            const temp = [...score]\n            temp[xTurn ? 0 : 1] += 1\n            setScore(temp)\n            reset()\n        }\n        setXTurn(!xTurn)\n\n    }\n    const squares = []\n    for (let index = 0; index < 9; index++) {\n        squares.push(\n            <Square value={squareState[index]} onClick={() => handleClick(index)} />\n        )\n    }\n\n\n    return (\n        <main>\n            <div className=\"container\">\n                {squares}\n            </div>\n            <Score value={score} />\n        </main>\n    )\n}\n\nexport default Main","import Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport './App.css';\n\n\nfunction App () {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}